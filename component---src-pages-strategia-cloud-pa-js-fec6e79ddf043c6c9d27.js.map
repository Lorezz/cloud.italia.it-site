{"version":3,"sources":["webpack://cloud.italia.it-site/./src/components/TextChunk.js","webpack://cloud.italia.it-site/./src/components/hero/Hero.js","webpack://cloud.italia.it-site/./src/components/hero/HeroBody.js","webpack://cloud.italia.it-site/./src/components/hero/HeroTitle.js","webpack://cloud.italia.it-site/./src/components/resource/ResourceHeader.js","webpack://cloud.italia.it-site/./src/components/resource/ResourceReferences.js","webpack://cloud.italia.it-site/./src/components/resource/ResourceTitle.js","webpack://cloud.italia.it-site/./src/components/resource/ResourcesWithList.js","webpack://cloud.italia.it-site/./src/components/InDeepStrategyLinkComponent.js","webpack://cloud.italia.it-site/./src/layouts/StrategyPage.js","webpack://cloud.italia.it-site/./src/pages/strategia-cloud-pa.js","webpack://cloud.italia.it-site/./src/utils/proptypes.js"],"names":["useStyles","createUseStyles","list","ul","paddingLeft","li","marginBottom","color","TextChunk","html","classes","className","dangerouslySetInnerHTML","__html","Hero","bgColor","xPadding","yPaddingXLScreen","children","heroClasses","classNames","containerClass","body","fontSize","HeroBody","HeroTitle","linkTo","title","Tag","to","ResourceHeader","icon","composes","minWidth","Reference","reference","link","description","action","focusable","role","ariaLabelIcon","ResourceReferences","references","map","key","ResourceTitle","ResourcesWithList","resources","resource","index","LinksList","nodes","node","idx","fields","slug","frontmatter","InDeepStrategyLinkComponent","useStaticQuery","allMarkdownRemark","content","altImg","resourceTitle","seo","seoTitle","seoDescription","heroImage","maxHeight","StrategyPage","chunk1","SEO","socialCard","S","src","alt","layout","placeholder","formats","referencePropType","PropTypes","ariaLabel","isRequired","id","name"],"mappings":"41EAIMA,GAAYC,E,QAAAA,IAAgB,CAChCC,KAAM,CACJ,UAAW,CACTC,GAAI,CACFC,YAAa,QAEfC,GAAI,CACFC,aAAc,QAEhB,aAAc,CACZC,MAAO,sBAMFC,EAAY,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACpBC,EAAUV,IAEhB,OACE,uBAAKW,UAAU,+BACb,uBAAKA,UAAS,0BAA4BD,EAAQR,KAAQU,wBAAyB,CAAEC,OAAQJ,KAGlG,C,qGCxBYK,EAAO,SAAC,GAA0E,IAAD,IAAvEC,eAAuE,MAA7D,GAA6D,MAAzDC,gBAAyD,aAAxCC,wBAAwC,SAAfC,EAAe,EAAfA,SACvEC,EAAcC,IAAW,OAAQ,CACrC,aAA0B,YAAZL,EACd,kBAA+B,UAAZA,IAEfM,EAAiBD,IAAW,YAAa,CAC7C,UAAWH,EACX,eAAgBD,IAElB,OACE,uBAAKL,UAAWQ,GACd,uBAAKR,UAAWU,GAAiBH,GAGtC,C,iFCdKlB,GAAYC,E,QAAAA,IAAgB,CAChCqB,KAAM,CACJC,SAAU,YAIDC,EAAW,SAAC,GAAc,IAAZf,EAAW,EAAXA,KACnBC,EAAUV,IAChB,OAAO,uBAAKW,UAAWD,EAAQY,KAAMV,wBAAyB,CAAEC,OAAQJ,IACzE,C,4FCTYgB,EAAY,SAAC,GAAD,QAAGC,cAAH,MAAY,KAAZ,EAAkBC,EAAlB,EAAkBA,MAAlB,IAAyBhB,iBAAzB,MAAqC,GAArC,MAAyCiB,WAAzC,MAA+C,KAA/C,SACvB,gBAACA,EAAD,CAAKjB,UAAU,WACZe,EACC,gBAAC,KAAD,CAAMG,GAAIH,EAAQf,UAAS,wBAA0BA,GAClDgB,GAGH,wBAAMhB,UAAWA,GAAYgB,GAPV,C,iFCDZG,EAAiB,SAAC,GAAD,IAAGH,EAAH,EAAGA,MAAH,IAAUP,kBAAV,MAAuB,GAAvB,SAC5B,sBAAIT,UAAS,mEAAqES,GAAeO,EADrE,C,gHCIxB3B,G,SAAYC,QAAgB,CAChC8B,KAAM,CACJC,SAAU,YACVC,SAAU,WAIRC,EAAY,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,UACbzB,EAAUV,IAChB,OACE,0BACE,gBAAC,KAAD,CAAM6B,GAAIM,EAAUC,MAClB,uBAAKzB,UAAU,wCACb,uBAAKA,UAAU,qDACb,wBAAMA,UAAU,QAAQwB,EAAUR,OACjCQ,EAAUE,aAAe,yBAAO1B,UAAU,aAAawB,EAAUE,cAEpE,uBAAK1B,UAAU,gGACb,yBAAOC,wBAAyB,CAAEC,OAAQsB,EAAUG,UACpD,gBAAC,KAAD,CACEP,KAAMI,EAAUJ,KAChBpB,UAAWD,EAAQqB,KACnBQ,WAAW,EACXC,KAAK,MACL,aAAYL,EAAUM,mBAOnC,EAEYC,EAAqB,SAAC,GAAD,IAAGC,EAAH,EAAGA,WAAH,OAChC,uBAAKhC,UAAU,mBACb,sBAAIA,UAAU,WACXgC,EAAWC,KAAI,SAACT,GAAD,OACd,gBAACD,EAAD,CAAWC,UAAWA,EAAWU,IAAKV,EAAUR,OADlC,KAHY,C,kFCrCrBmB,EAAgB,SAAC,GAAD,IAAGnB,EAAH,EAAGA,MAAH,OAC3B,uBAAKhB,UAAU,gBACb,sBAAIA,UAAU,oEAAoEgB,GAFzD,C,+GCGhBoB,EAAoB,SAAC,GAAD,IAAGC,EAAH,EAAGA,UAAH,IAAcrC,iBAAd,MAA0B,GAA1B,SAC/BqC,EAAUJ,KAAI,SAACK,EAAUC,GAAX,OACZ,uBAAKL,IAAKK,EAAOvC,UAAWA,GACzBsC,EAAStB,OACR,uBAAKhB,UAAU,0BACb,gBAAC,IAAD,CAAgBgB,MAAOsB,EAAStB,MAAOP,WAAW,eAGtD,gBAAC,IAAD,CAAoBuB,WAAYM,EAASN,aAP/B,GADiB,C,8gFCH3BQ,EAAY,SAACC,GACjB,IAAMlD,EAAOkD,EAAMlD,MAAQ,GAC3B,OACE,uBAAKS,UAAU,iBACb,uBAAKA,UAAU,uBACb,uBAAKA,UAAU,mFAAf,kBAIF,uBAAKA,UAAU,2BACZT,EAAK0C,KAAI,SAACS,EAAMC,GAAP,OACR,gBAAC,KAAD,CAAMT,IAAKS,EAAK3C,UAAU,yDAAyDkB,GAAIwB,EAAKE,OAAOC,MAChGH,EAAKI,YAAY9B,MAFZ,KAQjB,EA8BY+B,EAA8B,WAAO,IAEzBN,GACnBO,QA/BU,aA8BZC,kBAAqBR,MAEvB,OAAO,gBAACD,EAAD,CAAWjD,KAAMkD,GACzB,EChCO9B,EAAkDuC,KAA5ClC,EAA4CkC,KAArCC,EAAqCD,KAA7BE,EAA6BF,KAAdb,EAAca,K,EACDG,KAA1CC,E,EAAPtC,MAA8BuC,E,EAAb7B,YAEnBrC,GAAYC,QAAgB,CAChCkE,UAAW,CACTC,UAAW,WAIFC,EAAe,WAC1B,IAAM3D,EAAUV,IAEEsE,GACdX,QArBK,cAoBPW,OAAU7D,KAGZ,OACE,gCACE,gBAAC8D,EAAA,EAAD,CAAK5C,MAAOsC,EAAU5B,YAAa6B,EAAgBM,WAAW,kBAC9D,gBAAC1D,EAAA,EAAD,CAAMG,kBAAkB,GACtB,uBAAKN,UAAU,0BACb,uBAAKA,UAAU,qCACb,uBAAKA,UAAU,4BACb,gBAACc,EAAA,EAAD,CAAWE,MAAOA,EAAOhB,UAAU,YAAYiB,IAAI,OACnD,gBAACJ,EAAA,EAAD,CAAUf,KAAMa,IAChB,gBAACoC,EAAD,UAMR,gBAAC,EAAAe,EAAD,CACEC,IAAI,wCACJ/D,UAAWD,EAAQyD,UACnBQ,IAAKb,EACLc,OAAQ,YACRC,YAAY,UACZC,QAAS,CAAC,OAAQ,OAAQ,QAN5B,sBASA,gBAAChE,EAAA,EAAD,KACE,gBAACN,EAAA,EAAD,CAAWC,KAAM6D,KAWnB,gBAACxD,EAAA,EAAD,CAAMC,QAAQ,QAAQC,UAAU,GAC9B,uBAAKL,UAAU,6BACb,gBAACmC,EAAA,EAAD,CAAenB,MAAOoC,IACtB,gBAAChB,EAAA,EAAD,CAAmBC,UAAWA,MAKvC,EC/ED,EADa,kBAAM,gBAACqB,EAAD,KAAN,C,2DCDAU,EAAoBC,UAAgB,CAC/C1C,OAAQ0C,sBACRC,UAAWD,sBACXvC,cAAeuC,sBACf3C,YAAa2C,WACbjD,KAAMiD,sBACN5C,KAAM4C,sBACNrD,MAAOqD,wBAGuBA,UAAgB,CAC9CrD,MAAOqD,WACPrC,WAAYqC,YAAkBD,GAAmBG,aAGdF,UAAgB,CACnDG,GAAIH,sBACJI,KAAMJ,sBACN3C,YAAa2C,uB","file":"component---src-pages-strategia-cloud-pa-js-fec6e79ddf043c6c9d27.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { createUseStyles } from 'react-jss';\n\nconst useStyles = createUseStyles({\n  list: {\n    '@global': {\n      ul: {\n        paddingLeft: '24px',\n      },\n      li: {\n        marginBottom: '16px',\n      },\n      'li::marker': {\n        color: 'var(--primary)',\n      },\n    },\n  },\n});\n\nexport const TextChunk = ({ html }) => {\n  const classes = useStyles();\n\n  return (\n    <div className=\"row align-items-center my-2\">\n      <div className={`col-12 col-lg-7 m-auto ${classes.list}`} dangerouslySetInnerHTML={{ __html: html }}></div>\n    </div>\n  );\n};\n\nTextChunk.propTypes = {\n  html: PropTypes.string.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nexport const Hero = ({ bgColor = '', xPadding = true, yPaddingXLScreen = true, children }) => {\n  const heroClasses = classNames('py-5', {\n    'bg-primary': bgColor === 'primary',\n    'lightgrey-bg-a2': bgColor === 'light',\n  });\n  const containerClass = classNames('container', {\n    'py-xl-5': yPaddingXLScreen,\n    'px-3 px-md-0': xPadding,\n  });\n  return (\n    <div className={heroClasses}>\n      <div className={containerClass}>{children}</div>\n    </div>\n  );\n};\n\nHero.propTypes = {\n  bgColor: PropTypes.oneOf(['primary', 'light']),\n  xPadding: PropTypes.bool,\n  yPaddingXLScreen: PropTypes.bool,\n  children: PropTypes.node.isRequired,\n};\n","import React from 'react';\nimport { createUseStyles } from 'react-jss';\nimport PropTypes from 'prop-types';\n\nconst useStyles = createUseStyles({\n  body: {\n    fontSize: '1.3rem',\n  },\n});\n\nexport const HeroBody = ({ html }) => {\n  const classes = useStyles();\n  return <div className={classes.body} dangerouslySetInnerHTML={{ __html: html }} />;\n};\n\nHeroBody.propTypes = {\n  html: PropTypes.string.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'gatsby';\n\nexport const HeroTitle = ({ linkTo = null, title, className = '', Tag = 'h3' }) => (\n  <Tag className=\"h1 mb-4\">\n    {linkTo ? (\n      <Link to={linkTo} className={`text-decoration-none ${className}`}>\n        {title}\n      </Link>\n    ) : (\n      <span className={className}>{title}</span>\n    )}\n  </Tag>\n);\n\nHeroTitle.propTypes = {\n  className: PropTypes.string,\n  linkTo: PropTypes.string,\n  Tag: PropTypes.string,\n  title: PropTypes.string.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const ResourceHeader = ({ title, classNames = '' }) => (\n  <h3 className={`text-uppercase font-weight-semibold h6 text-center text-md-left ${classNames}`}>{title}</h3>\n);\n\nResourceHeader.propTypes = {\n  classNames: PropTypes.string,\n  title: PropTypes.string.isRequired,\n};\n","import React from 'react';\nimport { Link } from 'gatsby';\nimport PropTypes from 'prop-types';\nimport { Icon } from 'design-react-kit';\nimport { createUseStyles } from 'react-jss';\nimport { referencePropType } from '../../utils/proptypes.js';\n\nconst useStyles = createUseStyles({\n  icon: {\n    composes: 'ml-2 mr-0',\n    minWidth: '16px',\n  },\n});\n\nconst Reference = ({ reference }) => {\n  const classes = useStyles();\n  return (\n    <li>\n      <Link to={reference.link}>\n        <div className=\"it-right-zone mx-0 mx-sm-4 flex-wrap\">\n          <div className=\"col-12 col-md-7 col-lg-8 text-center text-md-left\">\n            <span className=\"text\">{reference.title}</span>\n            {reference.description && <small className=\"text-dark\">{reference.description}</small>}\n          </div>\n          <div className=\"col-12 col-md-5 col-lg-4 btn-icon justify-content-center justify-content-md-end mt-3 mt-md-0\">\n            <small dangerouslySetInnerHTML={{ __html: reference.action }}></small>\n            <Icon\n              icon={reference.icon}\n              className={classes.icon}\n              focusable={false}\n              role=\"img\"\n              aria-label={reference.ariaLabelIcon}\n            />\n          </div>\n        </div>\n      </Link>\n    </li>\n  );\n};\n\nexport const ResourceReferences = ({ references }) => (\n  <div className=\"it-list-wrapper\">\n    <ul className=\"it-list\">\n      {references.map((reference) => (\n        <Reference reference={reference} key={reference.title} />\n      ))}\n    </ul>\n  </div>\n);\n\nResourceReferences.propTypes = {\n  references: PropTypes.arrayOf(referencePropType).isRequired,\n};\n\nReference.propTypes = {\n  reference: referencePropType.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const ResourceTitle = ({ title }) => (\n  <div className=\"mx-0 mx-sm-4\">\n    <h2 className=\"h5 font-weight-semibold text-info-title text-center text-md-left\">{title}</h2>\n  </div>\n);\n\nResourceTitle.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { resourcePropType } from '../../utils/proptypes.js';\nimport { ResourceHeader } from './ResourceHeader.js';\nimport { ResourceReferences } from './ResourceReferences.js';\n\nexport const ResourcesWithList = ({ resources, className = '' }) =>\n  resources.map((resource, index) => (\n    <div key={index} className={className}>\n      {resource.title && (\n        <div className=\"mt-5 mb-3 mx-0 mx-sm-4\">\n          <ResourceHeader title={resource.title} classNames=\"text-info\" />\n        </div>\n      )}\n      <ResourceReferences references={resource.references} />\n    </div>\n  ));\n\nResourcesWithList.propTypes = {\n  resources: PropTypes.arrayOf(resourcePropType).isRequired,\n};\n","import React from 'react';\nimport { graphql, useStaticQuery, Link } from 'gatsby';\n\nconst LinksList = (nodes) => {\n  const list = nodes.list || [];\n  return (\n    <div className=\"row mb-5 mt-5\">\n      <div className=\"col-12 m-0 ml-1 p-0\">\n        <div className=\"mid-caption text-uppercase font-weight-semibold mb-4 d-block mid-caption--large\">\n          Approfondisci\n        </div>\n      </div>\n      <div className=\" m-auto ml-sm-1 pr-sm-5\">\n        {list.map((node, idx) => (\n          <Link key={idx} className=\"text-decoration-none font-weight-semibold d-block mb-3\" to={node.fields.slug}>\n            {node.frontmatter.title}\n          </Link>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nconst qStrategia = graphql`\n  {\n    allMarkdownRemark(\n      sort: { fields: frontmatter___date, order: DESC }\n      filter: { frontmatter: { type: { eq: \"indeepStrategia\" } } }\n    ) {\n      nodes {\n        fields {\n          slug\n        }\n        frontmatter {\n          title\n          subtitle\n          date(formatString: \"DD/MM/YYYY\")\n          evidence\n          internalNews\n          fonte\n          showInHome\n          typeOfNews\n          link\n          image\n          tags\n        }\n      }\n    }\n  }\n`;\n\nexport const InDeepStrategyLinkComponent = () => {\n  const {\n    allMarkdownRemark: { nodes },\n  } = useStaticQuery(qStrategia);\n  return <LinksList list={nodes} />;\n};\n","import React from 'react';\nimport { StaticImage } from 'gatsby-plugin-image';\nimport { graphql, useStaticQuery } from 'gatsby';\nimport { createUseStyles } from 'react-jss';\nimport { Hero } from '../components/hero/Hero.js';\nimport { ResourcesWithList } from '../components/resource/ResourcesWithList.js';\nimport { HeroTitle } from '../components/hero/HeroTitle.js';\nimport { HeroBody } from '../components/hero/HeroBody.js';\nimport { ResourceTitle } from '../components/resource/ResourceTitle.js';\nimport { TextChunk } from '../components/TextChunk.js';\nimport content from '../../contents/strategy-page/strategy.yml';\nimport { SEO } from '../components/SEO.js';\nimport seo from '../../contents/seo.yml';\n\nimport { InDeepStrategyLinkComponent } from '../components/InDeepStrategyLinkComponent.js';\n\nconst query = graphql`\n  query {\n    chunk1: markdownRemark(fields: { slug: { eq: \"strategy-page/strategy-chunk1\" } }) {\n      html\n    }\n  }\n`;\n\nconst { body, title, altImg, resourceTitle, resources } = content;\nconst { title: seoTitle, description: seoDescription } = seo.strategyPage;\n\nconst useStyles = createUseStyles({\n  heroImage: {\n    maxHeight: '500px',\n  },\n});\n\nexport const StrategyPage = () => {\n  const classes = useStyles();\n  const {\n    chunk1: { html: chunk1 },\n  } = useStaticQuery(query);\n\n  return (\n    <>\n      <SEO title={seoTitle} description={seoDescription} socialCard=\"strategia.jpg\" />\n      <Hero yPaddingXLScreen={false}>\n        <div className=\"row align-items-center\">\n          <div className=\"offset-lg-1 col-lg-6 mt-4 mt-lg-0\">\n            <div className=\"text-center text-lg-left\">\n              <HeroTitle title={title} className=\"text-info\" Tag=\"h1\" />\n              <HeroBody html={body} />\n              <InDeepStrategyLinkComponent />\n            </div>\n          </div>\n        </div>\n      </Hero>\n\n      <StaticImage\n        src=\"../images/strategia_hero_cloud_2x.jpg\"\n        className={classes.heroImage}\n        alt={altImg}\n        layout={'fullWidth'}\n        placeholder=\"blurred\"\n        formats={['AUTO', 'AVIF', 'WEBP']}\n      />\n\n      <Hero>\n        <TextChunk html={chunk1} />\n      </Hero>\n\n      {/* The Timeline is temporary removed due to lack of useful contents. \n        Because it could be reintroduced in the near future I have left it here commented.\n        Please remove if it won't be used after a while.\n        Time of writing: 2021-04-09 */}\n      {/* <Hero bgColor=\"light\"> */}\n      {/*  <Timeline data={timeline} title={timelineTitle} /> */}\n      {/* </Hero> */}\n\n      <Hero bgColor=\"light\" xPadding={false}>\n        <div className=\"col-xl-8 col-lg-10 m-auto\">\n          <ResourceTitle title={resourceTitle} />\n          <ResourcesWithList resources={resources} />\n        </div>\n      </Hero>\n    </>\n  );\n};\n","import React from 'react';\nimport { StrategyPage } from '../layouts/StrategyPage.js';\n\nconst Page = () => <StrategyPage />;\nexport default Page;\n","import PropTypes from 'prop-types';\n\nexport const referencePropType = PropTypes.exact({\n  action: PropTypes.string.isRequired,\n  ariaLabel: PropTypes.string.isRequired,\n  ariaLabelIcon: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  icon: PropTypes.string.isRequired,\n  link: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n});\n\nexport const resourcePropType = PropTypes.exact({\n  title: PropTypes.string,\n  references: PropTypes.arrayOf(referencePropType).isRequired,\n});\n\nexport const glossaryTermPropTypes = PropTypes.exact({\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n});\n"],"sourceRoot":""}