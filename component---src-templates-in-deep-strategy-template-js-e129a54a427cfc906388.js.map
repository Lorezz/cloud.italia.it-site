{"version":3,"sources":["webpack://cloud.italia.it-site/./src/components/Breadcrumb.js","webpack://cloud.italia.it-site/./src/components/TextChunk.js","webpack://cloud.italia.it-site/./src/components/hero/Hero.js","webpack://cloud.italia.it-site/./src/components/hero/HeroBody.js","webpack://cloud.italia.it-site/./src/components/hero/HeroTitle.js","webpack://cloud.italia.it-site/./src/templates/InDeepStrategyTemplate.js"],"names":["Breadcrumb","currentPage","goToVertical","verticalTitle","className","labels","to","useStyles","createUseStyles","list","ul","paddingLeft","li","marginBottom","color","TextChunk","html","classes","dangerouslySetInnerHTML","__html","Hero","bgColor","xPadding","yPaddingXLScreen","children","heroClasses","classNames","containerClass","body","fontSize","HeroBody","HeroTitle","linkTo","title","Tag","markdownRemark","data","frontmatter","description","subtitle"],"mappings":"oMAKaA,EAAa,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAH,IAAgBC,oBAAhB,aAAsCC,qBAAtC,gBACxB,uBAAKC,UAAU,aACb,uBAAKA,UAAU,OACb,uBAAKA,UAAU,UACb,uBAAK,aAAYC,gBAA6BD,UAAU,wBACtD,sBAAIA,UAAU,qFACZ,sBAAIA,UAAU,qCACZ,gBAAC,KAAD,CAAMA,UAAU,qBAAqBE,GAAE,IAAKJ,GAA8B,MAA1E,IACMC,GAAgC,SAEtC,wBAAM,cAAY,OAAOC,UAAU,aAAnC,MAIF,sBAAI,eAAa,OAAOA,UAAU,0BAChC,wBAAMA,UAAU,wBAAwBH,QAf5B,C,gFCDpBM,GAAYC,E,QAAAA,IAAgB,CAChCC,KAAM,CACJ,UAAW,CACTC,GAAI,CACFC,YAAa,QAEfC,GAAI,CACFC,aAAc,QAEhB,aAAc,CACZC,MAAO,sBAMFC,EAAY,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACpBC,EAAUV,IAEhB,OACE,uBAAKH,UAAU,+BACb,uBAAKA,UAAS,0BAA4Ba,EAAQR,KAAQS,wBAAyB,CAAEC,OAAQH,KAGlG,C,qGCxBYI,EAAO,SAAC,GAA0E,IAAD,IAAvEC,eAAuE,MAA7D,GAA6D,MAAzDC,gBAAyD,aAAxCC,wBAAwC,SAAfC,EAAe,EAAfA,SACvEC,EAAcC,IAAW,OAAQ,CACrC,aAA0B,YAAZL,EACd,kBAA+B,UAAZA,IAEfM,EAAiBD,IAAW,YAAa,CAC7C,UAAWH,EACX,eAAgBD,IAElB,OACE,uBAAKlB,UAAWqB,GACd,uBAAKrB,UAAWuB,GAAiBH,GAGtC,C,iFCdKjB,GAAYC,E,QAAAA,IAAgB,CAChCoB,KAAM,CACJC,SAAU,YAIDC,EAAW,SAAC,GAAc,IAAZd,EAAW,EAAXA,KACnBC,EAAUV,IAChB,OAAO,uBAAKH,UAAWa,EAAQW,KAAMV,wBAAyB,CAAEC,OAAQH,IACzE,C,4FCTYe,EAAY,SAAC,GAAD,QAAGC,cAAH,MAAY,KAAZ,EAAkBC,EAAlB,EAAkBA,MAAlB,IAAyB7B,iBAAzB,MAAqC,GAArC,MAAyC8B,WAAzC,MAA+C,KAA/C,SACvB,gBAACA,EAAD,CAAK9B,UAAU,WACZ4B,EACC,gBAAC,KAAD,CAAM1B,GAAI0B,EAAQ5B,UAAS,wBAA0BA,GAClD6B,GAGH,wBAAM7B,UAAWA,GAAY6B,GAPV,C,kHCwDzB,UAlD+B,SAAC,GAAc,IACpCE,EADmC,EAAXC,KACxBD,eACAE,EAAsBF,EAAtBE,YAAarB,EAASmB,EAATnB,KACrB,OACE,gCACE,gBAAC,IAAD,CAAKiB,MAAUI,EAAYJ,MAAjB,kBAAyCK,YAAaD,EAAYE,WAC5E,gBAAC,IAAD,CAAYtC,YAAW,GAAKoC,EAAYJ,MAAS/B,aAAa,uBAAuBC,cAAc,cACnG,gBAAC,IAAD,CAAMoB,kBAAkB,GACtB,uBAAKnB,UAAU,OACb,uBAAKA,UAAU,qCACb,uBAAKA,UAAU,IACb,gBAAC,IAAD,CAAW6B,MAAOI,EAAYJ,MAAO7B,UAAU,YAAY8B,IAAI,OAC/D,gBAAC,IAAD,CAAUlB,KAAMqB,EAAYE,aAGhC,uBAAKnC,UAAU,wCAWnB,2BAEA,gBAAC,IAAD,CAAMmB,kBAAkB,GACtB,gBAAC,IAAD,CAAWP,KAAMA,KAIxB,C","file":"component---src-templates-in-deep-strategy-template-js-e129a54a427cfc906388.js","sourcesContent":["import React from 'react';\nimport { Link } from 'gatsby';\nimport PropTypes from 'prop-types';\nimport labels from '../../contents/labels.yml';\n\nexport const Breadcrumb = ({ currentPage, goToVertical = false, verticalTitle = false }) => (\n  <div className=\"container\">\n    <div className=\"row\">\n      <div className=\"col-12\">\n        <nav aria-label={labels.ariaLabel.breadcrumb} className=\"breadcrumb-container\">\n          <ol className=\"breadcrumb ml-0 ml-sm-4 mt-4 mb-0 justify-content-center justify-content-sm-start\">\n            <li className=\"breadcrumb-item d-none d-sm-block\">\n              <Link className=\"font-weight-normal\" to={`${goToVertical ? goToVertical : '/'}`}>\n                {`${verticalTitle ? verticalTitle : 'Home'}`}\n              </Link>\n              <span aria-hidden=\"true\" className=\"separator\">\n                /\n              </span>\n            </li>\n            <li aria-current=\"page\" className=\"breadcrumb-item active\">\n              <span className=\"font-weight-semibold\">{currentPage}</span>\n            </li>\n          </ol>\n        </nav>\n      </div>\n    </div>\n  </div>\n);\n\nBreadcrumb.propTypes = {\n  currentPage: PropTypes.string.isRequired,\n  goToVertical: PropTypes.string,\n  verticalTitle: PropTypes.string,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { createUseStyles } from 'react-jss';\n\nconst useStyles = createUseStyles({\n  list: {\n    '@global': {\n      ul: {\n        paddingLeft: '24px',\n      },\n      li: {\n        marginBottom: '16px',\n      },\n      'li::marker': {\n        color: 'var(--primary)',\n      },\n    },\n  },\n});\n\nexport const TextChunk = ({ html }) => {\n  const classes = useStyles();\n\n  return (\n    <div className=\"row align-items-center my-2\">\n      <div className={`col-12 col-lg-7 m-auto ${classes.list}`} dangerouslySetInnerHTML={{ __html: html }}></div>\n    </div>\n  );\n};\n\nTextChunk.propTypes = {\n  html: PropTypes.string.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nexport const Hero = ({ bgColor = '', xPadding = true, yPaddingXLScreen = true, children }) => {\n  const heroClasses = classNames('py-5', {\n    'bg-primary': bgColor === 'primary',\n    'lightgrey-bg-a2': bgColor === 'light',\n  });\n  const containerClass = classNames('container', {\n    'py-xl-5': yPaddingXLScreen,\n    'px-3 px-md-0': xPadding,\n  });\n  return (\n    <div className={heroClasses}>\n      <div className={containerClass}>{children}</div>\n    </div>\n  );\n};\n\nHero.propTypes = {\n  bgColor: PropTypes.oneOf(['primary', 'light']),\n  xPadding: PropTypes.bool,\n  yPaddingXLScreen: PropTypes.bool,\n  children: PropTypes.node.isRequired,\n};\n","import React from 'react';\nimport { createUseStyles } from 'react-jss';\nimport PropTypes from 'prop-types';\n\nconst useStyles = createUseStyles({\n  body: {\n    fontSize: '1.3rem',\n  },\n});\n\nexport const HeroBody = ({ html }) => {\n  const classes = useStyles();\n  return <div className={classes.body} dangerouslySetInnerHTML={{ __html: html }} />;\n};\n\nHeroBody.propTypes = {\n  html: PropTypes.string.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'gatsby';\n\nexport const HeroTitle = ({ linkTo = null, title, className = '', Tag = 'h3' }) => (\n  <Tag className=\"h1 mb-4\">\n    {linkTo ? (\n      <Link to={linkTo} className={`text-decoration-none ${className}`}>\n        {title}\n      </Link>\n    ) : (\n      <span className={className}>{title}</span>\n    )}\n  </Tag>\n);\n\nHeroTitle.propTypes = {\n  className: PropTypes.string,\n  linkTo: PropTypes.string,\n  Tag: PropTypes.string,\n  title: PropTypes.string.isRequired,\n};\n","import React from 'react';\nimport { graphql } from 'gatsby';\nimport PropTypes from 'prop-types';\nimport { TextChunk } from '../components/TextChunk.js';\nimport { HeroTitle } from '../components/hero/HeroTitle.js';\nimport { HeroBody } from '../components/hero/HeroBody.js';\nimport { Hero } from '../components/hero/Hero.js';\nimport { Breadcrumb } from '../components/Breadcrumb.js';\nimport { SEO } from '../components/SEO.js';\n\nconst InDeepStrategyTemplate = ({ data }) => {\n  const { markdownRemark } = data; // data.markdownRemark holds our post data\n  const { frontmatter, html } = markdownRemark;\n  return (\n    <>\n      <SEO title={`${frontmatter.title} - Cloud Italia`} description={frontmatter.subtitle} />\n      <Breadcrumb currentPage={`${frontmatter.title}`} goToVertical=\"/strategia-cloud-pa/\" verticalTitle=\"Strategia\" />\n      <Hero yPaddingXLScreen={false}>\n        <div className=\"row\">\n          <div className=\"offset-lg-1 col-lg-6 mt-4 mt-lg-0\">\n            <div className=\"\">\n              <HeroTitle title={frontmatter.title} className=\"text-info\" Tag=\"h1\" />\n              <HeroBody html={frontmatter.subtitle} />\n            </div>\n          </div>\n          <div className=\"offset-lg-1 col-lg-4 mt-4 mt-lg-0\">\n            {/* <div className=\"h6 text-uppercase\">{labels.topics}</div>\n            {frontmatter.tags.map((tag) => (\n              <div className=\"d-inline-block d-lg-block mr-4 mt-lg-2\" key={tag}>\n                {tag}\n              </div>\n            ))} */}\n          </div>\n        </div>\n      </Hero>\n\n      <hr />\n\n      <Hero yPaddingXLScreen={false}>\n        <TextChunk html={html} />\n      </Hero>\n    </>\n  );\n};\n\nexport const pageQuery = graphql`\n  query($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      frontmatter {\n        date\n        title\n        subtitle\n        tags\n      }\n      timeToRead\n    }\n  }\n`;\n\nexport default InDeepStrategyTemplate;\n\nInDeepStrategyTemplate.propTypes = {\n  data: PropTypes.exact({\n    markdownRemark: PropTypes.exact({\n      frontmatter: PropTypes.exact({\n        date: PropTypes.string.isRequired,\n        title: PropTypes.string.isRequired,\n        subtitle: PropTypes.string.isRequired,\n        tags: PropTypes.arrayOf(PropTypes.string),\n      }),\n      html: PropTypes.string.isRequired,\n      timeToRead: PropTypes.number.isRequired,\n    }),\n  }).isRequired,\n};\n"],"sourceRoot":""}